name: Build and Test

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main


jobs:


  macos-build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-12, macos-latest ]
        java: [ '9', '11', '15', '17' ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          architecture: x64
          distribution: 'zulu'
          cache: 'maven'

      - name: Build/test code with Maven
        run: mvn -B install --file pom.xml

      - name: Upload CodeCov Report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: matrix.os == 'macos-12' && matrix.java == '9'


  windows-build:

    runs-on: windows-2019
    strategy:
      matrix:
        arch: [ x86_64, i386 ]
        java: [ '9', '11', '15', '17' ]
        include:
          - arch: x86_64
            sys: mingw64
            env: x86_64
          - arch: i386
            sys: mingw32
            env: i686
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          install: mingw-w64-${{ matrix.env }}-toolchain
          path-type: inherit

      - uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
          cache: 'maven'

      - name: Build/test code with Maven
        run: |
          which mvn
          mvn -P platform-${{ matrix.arch }}-win -B install --file pom.xml


  linux-build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-latest ]
        java: [ '9', '11', '15', '17' ]
        arch: [ x86_64, aarch64 ]
        include:
          - arch: x86_64
            skiptests: 'false'
          - arch: aarch64
            skiptests: 'true'

    steps:
      - name: Set up cross compile toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y g++-aarch64-linux-gnu gcc-aarch64-linux-gnu crossbuild-essential-arm64

      - uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
          cache: 'maven'

      - name: Build/test code with Maven
        run: mvn -P platform-${{ matrix.arch }}-linux -B install --file pom.xml -Dmaven.test.skip=${{ matrix.skiptests }}
